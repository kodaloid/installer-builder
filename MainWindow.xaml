<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InstallerBuilder"
        xmlns:inc="clr-namespace:InstallerBuilder.Includes"
        xmlns:ctl="clr-namespace:InstallerBuilder.Controls"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        x:Class="InstallerBuilder.MainWindow"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen" Loaded="Window_Loaded"
        MinHeight="580" MinWidth="700"
        Title="Installer Builder" Height="550" Width="700" Icon="/Assets/ibuilder.ico">

    <Window.Resources>
        <inc:EnumToNameConverter x:Key="enumToNameConverter" />
        <inc:EnumToDescriptionConverter x:Key="enumToDescriptionConverter" />
        <ObjectDataProvider x:Key="dataSoftwareTypes" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="inc:SoftwareType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="dataSupportTypes" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="inc:SupportType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="dataInstallerTypes" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="inc:InstallerType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="dataRequestExecutionLevel" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="inc:RequestExecutionLevelType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <Window.CommandBindings>
        <!-- Menu Commands -->
        <CommandBinding Command="local:Commands.FileNew" CanExecute="CommandCanAlwaysExecute" Executed="CommandMenu_Executed" />
        <CommandBinding Command="local:Commands.FileOpen" CanExecute="CommandCanAlwaysExecute" Executed="CommandMenu_Executed" />
        <CommandBinding Command="local:Commands.FileSave" CanExecute="CommandCanAlwaysExecute" Executed="CommandMenu_Executed" />
        <CommandBinding Command="local:Commands.FileSaveAs" CanExecute="CommandCanAlwaysExecute" Executed="CommandMenu_Executed" />
        <CommandBinding Command="local:Commands.FileExit" CanExecute="CommandCanAlwaysExecute" Executed="CommandMenu_Executed" />
        <CommandBinding Command="local:Commands.About" CanExecute="CommandCanAlwaysExecute" Executed="CommandMenu_Executed" />
        <!-- Button Commands -->
        <CommandBinding Command="local:Commands.BuildPreview" CanExecute="CommandCanAlwaysExecute" Executed="CommandMenu_Executed" />
        <CommandBinding Command="local:Commands.BuildNow" CanExecute="CommandCanAlwaysExecute" Executed="CommandMenu_Executed" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="local:Commands.FileSave" Gesture="CTRL+S" />
        <KeyBinding Command="local:Commands.BuildNow" Gesture="F5" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu VerticalAlignment="Top" Padding="3">
            <MenuItem Header="_File">
                <MenuItem Command="local:Commands.FileNew" />
                <MenuItem Command="local:Commands.FileOpen" />
                <MenuItem Command="local:Commands.FileSave" InputGestureText="CTRL+S" />
                <MenuItem Command="local:Commands.FileSaveAs" />
                <Separator />
                <MenuItem Command="local:Commands.BuildNow" InputGestureText="CTRL+B" />
                <Separator />
                <MenuItem Command="local:Commands.FileExit" />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Command="local:Commands.About" />
            </MenuItem>
        </Menu>

        <TabControl Margin="10,34,10,10">

            <TabItem Header="General Settings">
                <Grid Background="White">

                    <Border Margin="5" BorderBrush="#fff" BorderThickness="1">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="10" DataContext="{Binding Project}">
                                <ctl:TextAndLabel x:Name="textProduct" Label="Product" Text="{Binding ProductName, Mode=TwoWay}" />
                                <ctl:ComboAndLabel x:Name="comboSoftwareType" Label="Software Type" SelectedItem="{Binding SoftwareType, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource dataSoftwareTypes}}">
                                    <ctl:ComboAndLabel.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ., Converter={StaticResource enumToNameConverter}}" />
                                        </DataTemplate>
                                    </ctl:ComboAndLabel.ItemTemplate>
                                </ctl:ComboAndLabel>
                                <TextBlock Margin="152,0,0,10" DataContext="{Binding ElementName=comboSoftwareType, Path=SelectedItem, Mode=TwoWay}" TextWrapping="Wrap" Text="{Binding ., Converter={StaticResource enumToDescriptionConverter}}" />

                                <ctl:TextAreaAndLabel x:Name="textDescription" Label="Description" Text="{Binding Description, Mode=TwoWay}" />
                                <ctl:TextAndLabel x:Name="textPublisher" Label="Publisher Name" Text="{Binding Publisher, Mode=TwoWay}" />
                                <ctl:TextAndLabel x:Name="textCopyright" Label="Copyright" Text="{Binding Copyright, Mode=TwoWay}" />
                                <ctl:TextAndLabel x:Name="textWebsite" Label="Website" Text="{Binding Website, Mode=TwoWay}" />
                                <ctl:TextAndLabel x:Name="textVersion" Label="Version" Text="{Binding Version, Mode=TwoWay}" />
                                <ctl:TextAndLabel x:Name="textOutputFilename" Label="Output Filename" Text="{Binding OutputFilename, Mode=TwoWay}" />
                            </StackPanel>
                        </ScrollViewer>
                    </Border>

                </Grid>
            </TabItem>


            <TabItem Header="Options">
                <Grid>

                    <Border Margin="5" BorderBrush="#fff" BorderThickness="1">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="10" DataContext="{Binding Project}">


                                <ctl:ComboAndLabel x:Name="comboInstallerType" Label="Installer Type" SelectedItem="{Binding Path=Installer, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource dataInstallerTypes}}">
                                    <ctl:ComboAndLabel.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ., Converter={StaticResource enumToNameConverter}}" />
                                        </DataTemplate>
                                    </ctl:ComboAndLabel.ItemTemplate>
                                </ctl:ComboAndLabel>
                                <TextBlock Margin="152,0,0,10" DataContext="{Binding ElementName=comboInstallerType, Path=SelectedItem}" TextWrapping="Wrap" Text="{Binding ., Converter={StaticResource enumToDescriptionConverter}}" />

                                <ctl:ComboAndLabel x:Name="comboSupportType" Visibility="Collapsed" Label="Bundle Framework" SelectedItem="{Binding Path=SupportFramework, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource dataSupportTypes}}">
                                    <ctl:ComboAndLabel.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ., Converter={StaticResource enumToNameConverter}}" />
                                        </DataTemplate>
                                    </ctl:ComboAndLabel.ItemTemplate>
                                </ctl:ComboAndLabel>
                                <TextBlock Margin="152,0,0,10" Visibility="Collapsed" DataContext="{Binding ElementName=comboSupportType, Path=SelectedItem}" TextWrapping="Wrap" Text="{Binding ., Converter={StaticResource enumToDescriptionConverter}}" />

                                <ctl:ComboAndLabel x:Name="comboRequestExecutionLevel" Label="Request Execution Level" SelectedItem="{Binding Path=RequestExecutionLevel, Mode=TwoWay}" ItemsSource="{Binding Source={StaticResource dataRequestExecutionLevel}}">
                                    <ctl:ComboAndLabel.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ., Converter={StaticResource enumToNameConverter}}" />
                                        </DataTemplate>
                                    </ctl:ComboAndLabel.ItemTemplate>
                                </ctl:ComboAndLabel>
                                <TextBlock Margin="152,0,0,10" DataContext="{Binding ElementName=comboRequestExecutionLevel, Path=SelectedItem}" TextWrapping="Wrap" Text="{Binding ., Converter={StaticResource enumToDescriptionConverter}}" />

                                <ctl:TextAndLabel x:Name="checkStartMenuFolder" Label="Start Menu Folder" ShowCheckBox="True" Checked="{Binding Path=CreateStartMenuShortcut, Mode=TwoWay}" Text="{Binding Path=StartMenuFolderName, Mode=TwoWay}" />
                                <TextBlock Margin="152,0,0,10" Text="Provide a folder name." />

                            </StackPanel>
                        </ScrollViewer>
                    </Border>

                </Grid>
            </TabItem>


            <TabItem Header="License">
                <Grid Background="#fff" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="buttonLoadLicence" Content="Load File..." Click="buttonLoadLicence_Click" />
                        <CheckBox x:Name="checkIncludeLicense" Content="Include License Page?" VerticalAlignment="Center" Margin="10,1,0,0" IsChecked="{Binding CurrentProject.IncludeLicensePage, Mode=TwoWay}" />
                    </StackPanel>

                    <TextBox x:Name="textLicense" Margin="0,5,0,0" Padding="5" Grid.Row="1" VerticalScrollBarVisibility="Visible" Text="{Binding CurrentProject.License, Mode=TwoWay}" />

                </Grid>
            </TabItem>


            <TabItem Header="File System">
                <Grid Margin="5">

                    <Border Margin="0" BorderBrush="#ccc" BorderThickness="1">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="10" DataContext="{Binding Project}">
                                <ctl:TextAndLabel x:Name="tt" Label="Source Directory" ShowButton="True" Text="{Binding SourcePath, Mode=TwoWay}" ButtonClick="buttonBrowseSource_ButtonClick" />
                                <TextBlock Margin="152,0,0,10" Text="Can be relative or absolute. Leave as / if you want to use the same path as this project." />
                                <ctl:TextAreaAndLabel Label="File Ignore(s)" TextHeight="120" Text="{Binding SourceIgnores, Mode=TwoWay}" />
                                <TextBlock Margin="152,0,0,10" Text="An ignore list that uses the same format as .gitignore" />
                                <ctl:TextAreaAndLabel Label="Desktop Shortcut(s)" Text="{Binding DesktopShortcutIncludes, Mode=TwoWay}" />
                                <TextBlock Margin="152,0,0,10" Text="A list of files to create shortcuts for (For example MyApp.exe)." />
                                <ctl:TextAndLabel Label="Primary EXE Filename" Text="{Binding PrimaryExeFilename, Mode=TwoWay}" />
                                <TextBlock Margin="152,0,0,10" Text="This is used for the icon, and to allow user to launch app after install." />

                            </StackPanel>
                        </ScrollViewer>
                    </Border>

                    <!-- TreeView Grid.Row="1">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type self:MenuItem}" ItemsSource="{Binding Items}">
                                <TextBlock Text="{Binding Title}" />
                            </HierarchicalDataTemplate>
                        </>
                    </ -->

                </Grid>
            </TabItem>
            
            
        </TabControl>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5,0,10,10">
            <Button Height="32" Command="local:Commands.BuildPreview" Margin="0,0,10,0">Build Preview</Button>
            <Button Height="32" Command="local:Commands.BuildNow" IsDefault="True">Build Now (F5)</Button>
        </StackPanel>

    </Grid>


</Window>
